import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import plotly.graph_objects as go
import matplotlib.dates as mdates

# Define key known events for annotation
key_events = {
    '2024-10-03': "Trump campaign rally announcement",
    '2024-11-05': "Major trade policy speech",
    '2024-12-15': "Tariffs on China announced",
    '2025-01-20': "Viral Trump media appearance",
    '2025-03-04': "Tariffs on Canada and Mexico enforced"
}

# Function to generate an interactive sentiment-over-time dashboard
def interactive_dashboard(file_path):
    df = pd.read_csv(file_path)
    df['publishedAt'] = pd.to_datetime(df['publishedAt'], errors='coerce')
    df = df.dropna(subset=['publishedAt'])
    df['date'] = df['publishedAt'].dt.date

    sentiment_daily = df.groupby(['date', 'sentiment']).size().unstack(fill_value=0).reset_index()
    sentiment_melted = sentiment_daily.melt(id_vars='date', var_name='sentiment', value_name='count')

    fig = px.line(
        sentiment_melted,
        x='date',
        y='count',
        color='sentiment',
        markers=True,
        title=f"Interactive Sentiment Over Time for {file_path.split('/')[-1]}"
    )

    # Add annotations for key events
    for date, event in key_events.items():
        fig.add_vline(x=date, line_dash="dash", line_color="red")
        fig.add_annotation(x=date, y=sentiment_melted['count'].max(), text=event, showarrow=True, arrowhead=1, yshift=20)

    fig.update_layout(xaxis_title='Date', yaxis_title='Comment Count', xaxis=dict(tickangle=45))
    fig.show()

# Generate the interactive dashboard for each dataset
files = [
    "C:/Users/rishi/Desktop/trump/youtube_comments_9olb6OvXjKg_bert.csv",
    "C:/Users/rishi/Desktop/trump/youtube_comments_sXTVwtmABXM_bert.csv",
    "C:/Users/rishi/Desktop/trump/youtube_comments_t6ytCX1hQ7s_bert.csv",
    "C:/Users/rishi/Desktop/trump/youtube_comments_trHoI5Re3DE_bert.csv"
]

for file in files:
    interactive_dashboard(file)
